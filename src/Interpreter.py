from AST import *
from BoolangObjects import *


def countVars(expr):
    """ Takes and expression and returns a list of all unique
        variables
        TODO: this
    """

    unique_vars = []
    
    return unique_vars
    

class Interpreter:
    def interpret(self, ast):
        """ Takes AST from a BoolangParser and interprets it
        """

        # If no command is given, assume it is a function expression
        # and that we want to generate a truth table for it
        variables = countVars(ast)
        tempFunction = Function(expr=ast, variables=variables)
        self.truth(tempFunction)


    def truth(self, function):
        """ Takes a function object generated by the Interpreter
            and prints its truth table
        """
        print(function.truth())
